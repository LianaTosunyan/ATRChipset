


#ifndef WS_DRAWER_H
#define WS_DRAWER_H


// Includes
#include "wm_global.h"


// Qt forword declaration
class QRect;
class QPainter;


///////////////////////////////////////////////////////////////////////////////
namespace wm {
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//
// Interface CDrawaer
//
class CDrawer
{
public:
	// Default constructor
	inline CDrawer();
	// Destructor
	inline ~CDrawer();

public:
	//
	//! Own Interface
	//
	// Visibility
	inline void setEnable( bool b );
	inline bool isEnabled() const;
	// Do layout
	virtual QRect doLayout( QRect const& rc ) = 0;
	// Draw
	virtual void draw( QPainter* pPainter ) const = 0;

private:
	//
	//! Content
	//
	bool		m_bEnabled;
};
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//
// Inline implementation
//
inline CDrawer::CDrawer()
	: m_bEnabled(true)
{

}

inline CDrawer::~CDrawer()
{

}

inline void CDrawer::setEnable( bool b )
{
	m_bEnabled = b;
}

inline bool CDrawer::isEnabled() const
{
	return m_bEnabled;
}
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
} // namespace wm
///////////////////////////////////////////////////////////////////////////////

#endif //! WS_DRAWER_H
